{"ast":null,"code":"var _jsxFileName = \"C:\\\\Windows\\\\System32\\\\frontend\\\\src\\\\components\\\\RegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Flex } from 'antd';\nimport { Button, Cascader, DatePicker, Form, Input, InputNumber, Radio, Select, Switch, TreeSelect } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [category, setCategory] = useState(''); // Категория пользователя\n  const [first_name, setFirst_name] = useState('');\n  const [last_name, setLast_name] = useState('');\n  const [first_name_fa, setFirst_name_fa] = useState('');\n  const [phone_number, setPhone_number] = useState('');\n  const [snils, setSnils] = useState('');\n  const [faculty, setFaculty] = useState('');\n  const [group, setGroup] = useState('');\n  const [number_school, setNumber_school] = useState('');\n  const [class_school, setClass_school] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Отправка данных на сервер через fetch API\n      const response = await fetch('http://localhost:8000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          category,\n          first_name,\n          last_name,\n          first_name_fa,\n          phone_number,\n          snils,\n          faculty,\n          group,\n          number_school,\n          class_school,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error(await response.text());\n      }\n      alert('Вы успешно зарегистрированы!');\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n  };\n  let inputFields;\n  const App = () => /*#__PURE__*/_jsxDEV(Flex, {\n    vertical: true,\n    gap: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n      defaultValue: \"a\",\n      buttonStyle: \"solid\",\n      children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n        value: \"a\",\n        children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n        value: \"b\",\n        children: \"\\u041B\\u043E\\u0433\\u0438\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistrationForm, \"4VCT4mJQKdRVMByM+HRlm+4xGSU=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["useState","Flex","Button","Cascader","DatePicker","Form","Input","InputNumber","Radio","Select","Switch","TreeSelect","jsxDEV","_jsxDEV","RegistrationForm","_s","category","setCategory","first_name","setFirst_name","last_name","setLast_name","first_name_fa","setFirst_name_fa","phone_number","setPhone_number","snils","setSnils","faculty","setFaculty","group","setGroup","number_school","setNumber_school","class_school","setClass_school","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","text","alert","error","message","inputFields","App","vertical","gap","children","Group","defaultValue","buttonStyle","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Windows/System32/frontend/src/components/RegistrationForm.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Flex } from 'antd';\r\nimport {  Button, Cascader,  DatePicker, Form,  Input, InputNumber,  Radio, Select,  Switch, TreeSelect } from 'antd';\r\n\r\nconst RegistrationForm = () => {\r\n    const [category, setCategory] = useState(''); // Категория пользователя\r\n    const [first_name, setFirst_name] = useState('');\r\n    const [last_name, setLast_name] = useState('');\r\n    const [first_name_fa, setFirst_name_fa] = useState('');\r\n    const [phone_number, setPhone_number] = useState('');\r\n    const [snils, setSnils] = useState('');\r\n    const [faculty, setFaculty] = useState('');\r\n    const [group, setGroup] = useState('');\r\n    const [number_school, setNumber_school] = useState('');\r\n    const [class_school, setClass_school] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n            // Отправка данных на сервер через fetch API\r\n            const response = await fetch('http://localhost:8000/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ category, first_name, last_name, first_name_fa, phone_number, snils, faculty, group, \r\n                    number_school, class_school, email, password })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(await response.text());\r\n            }\r\n\r\n            alert('Вы успешно зарегистрированы!');\r\n        } catch (error) {\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n    let inputFields;\r\n\r\n    const App = () => (\r\n        <Flex vertical gap=\"middle\">\r\n          <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\">Регистрация</Radio.Button>\r\n            <Radio.Button value=\"b\">Логин</Radio.Button>\r\n          </Radio.Group>\r\n          </Flex>\r\n);\r\n    \r\n    \r\n}\r\nexport default RegistrationForm; \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}